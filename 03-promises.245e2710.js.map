{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGE,MAAIC,EAAUC,SAASC,cAAc,qBACjCC,EAASF,SAASC,cAAc,oBAChCE,EAAWH,SAASC,cAAc,sBAIxC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbKN,SAASC,cAAc,uBA6B/Ba,iBAAiB,SAAS,SAAUC,GAC5CA,EAAMC,iBAEN,MAAQC,MAAOC,GAAWf,GAClBc,MAAOE,GAASjB,GAChBe,MAAOX,GAAUP,GAjB3BqB,eAAyBF,EAAQC,EAAME,GACrC,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,IAC3BlB,EAAckB,EAAGD,EAAQF,GAAQG,EAAI,IAClCC,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAqBrB,QAAeC,MAAU,IAEvEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA3B,GAAS4B,OAAOG,QAAQ,oBAAoBvB,QAAeC,MAAU,G,CAY3EuB,CAAUC,OAAOZ,GAASY,OAAOX,GAAOW,OAAOxB,G","sources":["src/js/03-promises.js"],"sourcesContent":["// importowanie biblioteki\nimport Notiflix from 'notiflix';\n\n// pobieram dostęp do inputów i buttona\nconst delayEl = document.querySelector('input[name=delay]');\nconst stepEl = document.querySelector('input[name=step]');\nconst amountEl = document.querySelector('input[name=amount]');\nconst submitBtn = document.querySelector('button[type=submit]');\n\n// funkcja createPromise zwraca nową obietnicę\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nasync function myPromise(amount, step, delay) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + step * (i - 1))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nsubmitBtn.addEventListener('click', function (event) {\n  event.preventDefault();\n\n  const { value: amount } = amountEl;\n  const { value: step } = stepEl;\n  const { value: delay } = delayEl;\n\n  myPromise(Number(amount), Number(step), Number(delay));\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","value","amount","step","async","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$myPromise","Number"],"version":3,"file":"03-promises.245e2710.js.map"}